version: '3.7'

services:

 app:
  build:
   context: ./app
   args:
    - MEMORY_LIMIT=${APP_MEMORY_LIMIT}
    - IMAGE=${APP_IMAGE}
    - VERSION=${APP_VERSION}
  # To allow several executions at the same time, for instance CI such as jenkins
  #container_name: ${APP_NAME}
  depends_on:
    - db
  environment:
   - WORDPRESS_DB_HOST=${DB_NAME}
   - WORDPRESS_DB_NAME=${DB_MYSQL_DATABASE}
   - WORDPRESS_DB_USER=${DB_MYSQL_USER}
   - WORDPRESS_DB_PASSWORD=${DB_MYSQL_PASSWORD}

 db:
  # Build is need becasue if the 'docker-compose up' command is executed from within a docker container (for instance jenkins node) the volume will not work, will be empty
  build:
   context: ./db
   args:
    - IMAGE=${DB_IMAGE}
    - VERSION=${DB_VERSION}
    - DB_FILENAME=${DB_FILENAME}
  # To allow several executions at the same time, for instance CI such as jenkins
  #container_name: ${DB_NAME}
  environment:
   - MYSQL_DATABASE=${DB_MYSQL_DATABASE}
   # https://github.com/docker-library/mariadb/issues/261#issuecomment-532786537
   - MYSQL_INITDB_SKIP_TZINFO=1
   - MYSQL_PASSWORD=${DB_MYSQL_PASSWORD}
   - MYSQL_ROOT_PASSWORD=${DB_MYSQL_ROOT_PASSWORD}
   - MYSQL_USER=${DB_MYSQL_USER}
  image: ${DB_IMAGE}:${DB_VERSION}
  # The .sql file (if any) will be copied at build time, because if the 'docker-compose up' command is executed from within a docker container (for instance jenkins node) the volume will not work, will be empty
  #volumes:
  # - ./db:/docker-entrypoint-initdb.d
